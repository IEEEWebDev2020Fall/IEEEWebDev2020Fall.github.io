{"version":3,"sources":["Assets/logo.gif","Header/Header.jsx","SortingAlgorithms/Algorithms.js","SortingVisualizer/SortingVisualizer.jsx","App.js","index.js"],"names":["Header","state","isDropDownActive","selectedText","algorithmList","id","title","arraySizeChanged","e","props","bind","target","value","mouseOverSelectBox","setState","mouseOutSelectBox","algorithmSelected","playAndPauseClicked","setTo","className","src","logo","type","min","max","defaultValue","step","this","sliderMin","sliderMax","sliderDefault","onInput","onMouseOver","onMouseOut","map","option","onClick","name","htmlFor","isPlaying","Component","getMergeSortAnimation","array","startIndex","size","animations","leftArraySize","Math","floor","rightArraySize","merge","tempArr","copied","leftCopied","rightCopied","push","i","length","SortingVisualizer","animationStartingIndex","timers","myRef","React","createRef","setUp","prevProps","arrayLength","x","window","clearTimeout","pop","d3","attr","svgWidth","svgHeight","barPadding","barPaddingMultiplier","barWidth","randomNum","barHeightMin","barHeightMax","bars","document","querySelectorAll","style","fill","slice","startPlay","pausePlay","beginIndex","bar1Index","bar2Index","bar1","bar2","color","setTimeout","newHeight","setAttribute","width","svgMargins","height","margin","index","y","transform","random","App","innerWidth","parseInt","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ad78e93d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a3d7fcde.gif\";","import React, { Component } from \"react\";\nimport \"./Header.css\";\nimport logo from \"../Assets/logo.gif\";\nimport PropTypes from \"prop-types\";\n\nexport default class Header extends Component {\n  state = {\n    isDropDownActive: false,\n    selectedText: \"Selected Algorithm\",\n    algorithmList: [\n      {\n        id: \"merge\",\n        title: \"Merge Sort\",\n      },\n      {\n        id: \"quick\",\n        title: \"Quick Sort\",\n      },\n      {\n        id: \"bubble\",\n        title: \"Bubble Sort\",\n      },\n      {\n        id: \"insertion\",\n        title: \"Insertion Sort\",\n      },\n    ],\n  };\n\n  arraySizeChanged = (e) => {\n    this.props.arraySizeChanged.bind(this, e.target.value)();\n  };\n\n  mouseOverSelectBox = (e) => {\n    this.setState({ isDropDownActive: true });\n  };\n\n  mouseOutSelectBox = (e) => {\n    this.setState({ isDropDownActive: false });\n  };\n\n  algorithmSelected = (title) => {\n    this.setState({\n      selectedText: title,\n      isDropDownActive: false,\n    });\n  };\n\n  playAndPauseClicked = (setTo) => {\n    this.props.playAndPauseClicked.bind(this, setTo)();\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"logo\">\n          <img id=\"logoGif\" src={logo} />\n        </div>\n        <div className=\"controls\">\n          <div className=\"speed-control\">\n            <div className=\"title\">Sorting Speed</div>\n            <div className=\"slider\">\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"100\"\n                defaultValue=\"50\"\n                step=\"1\"\n              />\n            </div>\n          </div>\n          <div className=\"size-control\">\n            <div className=\"title\">Array Size</div>\n            <div className=\"slider\">\n              <input\n                type=\"range\"\n                min={this.props.sliderMin}\n                max={this.props.sliderMax}\n                defaultValue={this.props.sliderDefault}\n                step=\"1\"\n                onInput={this.arraySizeChanged}\n              />\n            </div>\n          </div>\n          <div className=\"algorithm-control\">\n            <div\n              className=\"select-box\"\n              onMouseOver={this.mouseOverSelectBox}\n              onMouseOut={this.mouseOutSelectBox}\n            >\n              <div\n                className={\n                  this.state.isDropDownActive\n                    ? \"options-container active\"\n                    : \"options-container\"\n                }\n              >\n                {this.state.algorithmList.map((option) => (\n                  <div\n                    key={option.id}\n                    className=\"option\"\n                    onClick={this.algorithmSelected.bind(this, option.title)}\n                  >\n                    <input\n                      type=\"radio\"\n                      className=\"radio\"\n                      id={option.id}\n                      name=\"category\"\n                    />\n                    <label htmlFor={option.id}>{option.title}</label>\n                  </div>\n                ))}\n              </div>\n              <div className=\"selected\">{this.state.selectedText}</div>\n            </div>\n          </div>\n          <button\n            className={this.props.isPlaying ? \"button playing\" : \"button\"}\n            onClick={this.playAndPauseClicked.bind(this, !this.props.isPlaying)}\n          ></button>\n        </div>\n      </div>\n    );\n  }\n}\n\nHeader.propTypes = {\n  arraySizeChanged: PropTypes.func.isRequired,\n  sliderMax: PropTypes.number.isRequired,\n  sliderMin: PropTypes.number.isRequired,\n  sliderDefault: PropTypes.number.isRequired,\n  playAndPauseClicked: PropTypes.func.isRequired,\n  isPlaying: PropTypes.bool.isRequired,\n};\n","// Merge Sort\nexport function getMergeSortAnimation(array, startIndex, size, animations) {\n  if (size > 1) {\n    const leftArraySize = Math.floor(size / 2);\n    const rightArraySize = size - leftArraySize;\n\n    getMergeSortAnimation(array, startIndex, leftArraySize, animations);\n    getMergeSortAnimation(\n      array,\n      startIndex + leftArraySize,\n      rightArraySize,\n      animations\n    );\n    merge(array, startIndex, leftArraySize, rightArraySize, animations);\n  }\n}\n\nconst merge = (\n  array,\n  startIndex,\n  leftArraySize,\n  rightArraySize,\n  animations\n) => {\n  var tempArr = [];\n  var copied = 0;\n  var leftCopied = 0;\n  var rightCopied = 0;\n\n  while (leftCopied < leftArraySize && rightCopied < rightArraySize) {\n    // Add comparison animation\n    animations.push([\n      startIndex + leftCopied,\n      startIndex + leftArraySize + rightCopied,\n    ]);\n    animations.push([\n      startIndex + leftCopied,\n      startIndex + leftArraySize + rightCopied,\n    ]);\n    if (\n      array[startIndex + leftCopied] <\n      array[startIndex + leftArraySize + rightCopied]\n    ) {\n      // Add overide animation\n      animations.push([startIndex + copied, array[startIndex + leftCopied]]);\n      tempArr[copied++] = array[startIndex + leftCopied++];\n    } else {\n      // Add overide animation\n      animations.push([\n        startIndex + copied,\n        array[startIndex + leftArraySize + rightCopied],\n      ]);\n      tempArr[copied++] = array[startIndex + leftArraySize + rightCopied++];\n    }\n  }\n\n  while (leftCopied < leftArraySize) {\n    animations.push([startIndex + leftCopied, startIndex + leftCopied]);\n    animations.push([startIndex + leftCopied, startIndex + leftCopied]);\n    animations.push([startIndex + copied, array[startIndex + leftCopied]]);\n    tempArr[copied++] = array[startIndex + leftCopied++];\n  }\n\n  while (rightCopied < rightArraySize) {\n    animations.push([\n      startIndex + leftArraySize + rightCopied,\n      startIndex + leftArraySize + rightCopied,\n    ]);\n    animations.push([\n      startIndex + leftArraySize + rightCopied,\n      startIndex + leftArraySize + rightCopied,\n    ]);\n    animations.push([\n      startIndex + copied,\n      array[startIndex + leftArraySize + rightCopied],\n    ]);\n    tempArr[copied++] = array[startIndex + leftArraySize + rightCopied++];\n  }\n\n  for (let i = 0; i < tempArr.length; i++) {\n    array[i + startIndex] = tempArr[i];\n  }\n};\n","import React, { Component } from \"react\";\nimport \"./SortingVisualizer.css\";\nimport { getMergeSortAnimation } from \"../SortingAlgorithms/Algorithms.js\";\nimport * as d3 from \"d3\";\nimport PropTypes from \"prop-types\";\n\nexport default class SortingVisualizer extends Component {\n  state = {\n    array: [],\n    animations: [],\n    animationStartingIndex: 0,\n    timers: [],\n  };\n\n  constructor(props) {\n    super(props);\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setUp();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.arrayLength !== this.props.arrayLength) {\n      this.setUp();\n    }\n    if (prevProps.isPlaying !== this.props.isPlaying) {\n      this.playAndPauseClicked(this.props.isPlaying);\n    }\n  }\n\n  setUp(x = this.props.arrayLength) {\n    // clean up\n    for (let i = this.state.timers.length - 1; i >= 0; i--) {\n      window.clearTimeout(this.state.timers[i]);\n      this.state.timers.pop();\n    }\n    this.setState({\n      array: [],\n      animationStartingIndex: 0,\n      animations: [],\n      timers: [],\n    });\n\n    // set svg frame\n    d3.select(\"svg\")\n      .attr(\"width\", this.props.svgWidth)\n      .attr(\"height\", this.props.svgHeight);\n\n    // calculate bar parameters\n    this.setState({\n      barPadding:\n        (this.props.svgWidth / this.props.arrayLength) *\n        this.props.barPaddingMultiplier,\n      barWidth:\n        (this.props.svgWidth / this.props.arrayLength) *\n        (1 - this.props.barPaddingMultiplier),\n    });\n\n    // get random array\n    const array = [];\n    for (let i = 0; i < x; i++) {\n      array.push(randomNum(this.props.barHeightMin, this.props.barHeightMax));\n    }\n    this.setState({\n      array: array,\n    });\n\n    // clean up bar color\n    const bars = document.querySelectorAll(\"rect\");\n    for (let i = 0; i < bars.length; i++) {\n      bars[i].style.fill = \"rgb(78, 169, 255)\";\n    }\n  }\n\n  playAndPauseClicked(isPlaying) {\n    if (isPlaying) {\n      // Check if the animation is created already\n      if (this.state.animations.length === 0) {\n        // make animations\n        getMergeSortAnimation(\n          this.state.array.slice(),\n          0,\n          this.state.array.length,\n          this.state.animations\n        );\n      } else {\n        // Sorting was paused\n        // If the sorting ended, restart\n        if (this.state.animationStartingIndex == this.state.animations.length) {\n          this.setUp();\n          getMergeSortAnimation(\n            this.state.array.slice(),\n            0,\n            this.state.array.length,\n            this.state.animations\n          );\n        }\n      }\n\n      // start sorting\n      this.startPlay();\n    } else {\n      // pause sort\n      this.pausePlay();\n    }\n  }\n\n  startPlay() {\n    // Start from where it left off\n    const beginIndex = this.state.animationStartingIndex;\n    for (let i = beginIndex; i < this.state.animations.length; i++) {\n      const bars = document.querySelectorAll(\"rect\");\n      const isComparison = i % 3 !== 2;\n      if (isComparison) {\n        const [bar1Index, bar2Index] = this.state.animations[i];\n        const bar1 = bars[bar1Index];\n        const bar2 = bars[bar2Index];\n        const color = i % 3 === 0 ? \"red\" : \"rgb(78, 169, 255)\";\n        this.state.timers.push(\n          setTimeout(() => {\n            bar1.style.fill = color;\n            bar2.style.fill = color;\n            this.state.animationStartingIndex++;\n          }, (i - beginIndex) * 5)\n        );\n      } else {\n        this.state.timers.push(\n          setTimeout(() => {\n            const [bar1Index, newHeight] = this.state.animations[i];\n            const bar1 = bars[bar1Index];\n            bar1.setAttribute(\"height\", newHeight);\n            bar1.setAttribute(\"y\", this.props.svgHeight - newHeight);\n            this.state.animationStartingIndex++;\n            if (\n              this.state.animationStartingIndex >= this.state.animations.length\n            ) {\n              this.props.pausePlay();\n            }\n          }, (i - beginIndex) * 5)\n        );\n      }\n    }\n  }\n\n  pausePlay() {\n    for (let i = this.state.timers.length - 1; i >= 0; i--) {\n      window.clearTimeout(this.state.timers[i]);\n      this.state.timers.pop();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          className=\"arrayContainer\"\n          style={{\n            width: this.props.svgWidth + this.props.svgMargins * 2 + \"px\",\n          }}\n        >\n          <div\n            className=\"barContainer\"\n            style={{\n              width: this.props.svgWidth + this.props.svgMargins * 2 + \"px\",\n              height: this.props.svgHeight + this.props.svgMargins * 2 + \"px\",\n            }}\n          >\n            <svg\n              id=\"svg\"\n              style={{\n                margin: this.props.svgMargins + \"px\",\n              }}\n            >\n              {this.state.array.map((value, index) => (\n                <rect\n                  key={index}\n                  y={this.props.svgHeight - value}\n                  height={value}\n                  width={this.state.barWidth}\n                  transform={\n                    \"translate(\" +\n                    [(this.state.barWidth + this.state.barPadding) * index, 0] +\n                    \")\"\n                  }\n                ></rect>\n              ))}\n            </svg>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSortingVisualizer.propTypes = {\n  svgWidth: PropTypes.number.isRequired,\n  svgHeight: PropTypes.number.isRequired,\n  svgMargins: PropTypes.number.isRequired,\n  barHeightMin: PropTypes.number.isRequired,\n  barHeightMax: PropTypes.number.isRequired,\n  barPaddingMultiplier: PropTypes.number.isRequired,\n  arrayLength: PropTypes.number.isRequired,\n};\n\nfunction randomNum(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./Header/Header\";\nimport SortingVisualizer from \"./SortingVisualizer/SortingVisualizer\";\n\n// const svgWidth = window.innerWidth - 100;\nconst svgHeight = 400;\nconst svgMargins = 15;\nconst barHeightMin = 5;\nconst barHeightMax = svgHeight - 15;\nconst barPaddingMultiplier = 1 / 5;\n// const arrayLength = 100\n\nexport default class App extends Component {\n  state = {\n    svgWidth: window.innerWidth - 100,\n    sliderMax: [window.innerWidth - 100] / 6,\n    sliderMin: 10,\n    arrayLength: Math.floor(\n      (parseInt(10) + parseInt([window.innerWidth - 100] / 6)) / 3\n    ),\n    sliderDefault: Math.floor(\n      (parseInt(10) + parseInt([window.innerWidth - 100] / 6)) / 3\n    ),\n    isPlaying: false,\n  };\n\n  arraySizeChanged = (size) => {\n    this.pausePlay();\n    this.setState({\n      arrayLength: parseInt(size),\n    });\n  };\n\n  playAndPauseClicked = (setTo) => {\n    this.setState({\n      isPlaying: setTo,\n    });\n  };\n\n  pausePlay = () => {\n    this.setState({\n      isPlaying: false,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          arraySizeChanged={this.arraySizeChanged}\n          sliderMax={this.state.sliderMax}\n          sliderMin={this.state.sliderMin}\n          sliderDefault={this.state.sliderDefault}\n          playAndPauseClicked={this.playAndPauseClicked}\n          isPlaying={this.state.isPlaying}\n        />\n        <SortingVisualizer\n          svgWidth={this.state.svgWidth}\n          svgHeight={svgHeight}\n          svgMargins={svgMargins}\n          barHeightMin={barHeightMin}\n          barHeightMax={barHeightMax}\n          barPaddingMultiplier={barPaddingMultiplier}\n          arrayLength={this.state.arrayLength}\n          isPlaying={this.state.isPlaying}\n          playAndPauseClicked={this.playAndPauseClicked}\n          pausePlay={this.pausePlay}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( \n    <React.StrictMode>\n    <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n); "],"sourceRoot":""}